#!/usr/bin/env python
PACKAGE = "mmuav_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#gen.add("ts", double_t, 0, "Data sample time", 0.01, 0, 1.0)

gen.add("x_t", double_t, 0, "Filter time constant for position x.", 0.1, 0, 5.0)
gen.add("x_k", double_t, 0, "Filter gain for position x.", 1.0, 0, 5.0)
gen.add("y_t", double_t, 0, "Filter time constant for position y.", 0.1, 0, 5.0)
gen.add("y_k", double_t, 0, "Filter gain for position y.", 1.0, 0, 5.0)
gen.add("z_t", double_t, 0, "Filter time constant for position z.", 0.1, 0, 5.0)
gen.add("z_k", double_t, 0, "Filter gain for position z.", 1.0, 0, 5.0)

gen.add("q_t", double_t, 0, "Filter time constant for orientation.", 0.1, 0, 5.0)
gen.add("q_k", double_t, 0, "Filter gain for orientation.", 1.0, 0, 5.0)

gen.add("vx_t", double_t, 0, "Filter time constant for velocity x.", 0.1, 0, 5.0)
gen.add("vx_k", double_t, 0, "Filter gain for velocity x.", 1.0, 0, 5.0)
gen.add("vy_t", double_t, 0, "Filter time constant for velocity y.", 0.1, 0, 5.0)
gen.add("vy_k", double_t, 0, "Filter gain for velocity y.", 1.0, 0, 5.0)
gen.add("vz_t", double_t, 0, "Filter time constant for velocity z.", 0.1, 0, 5.0)
gen.add("vz_k", double_t, 0, "Filter gain for velocity z.", 1.0, 0, 5.0)

exit(gen.generate(PACKAGE, "mmuav_control", "OdometryFilterParams"))
