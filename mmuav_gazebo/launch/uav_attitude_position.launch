<?xml version="1.0"?>

<launch>

  <arg name="use_sim_time" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="enable_logging" default="true"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="uav"/>  
  
  <arg name="paused" default="false"/>

  <arg name="name" default="uav" />
  <arg name="x" default="0.0" />
  <arg name="y" default="0.0" />
  <arg name="z" default="1.0" />

  <arg name="start_gazebo" default="true" />
  <arg name="turn_off_all_collisions" default="false" />
  <arg name="collision_bitmask" default="-1" />
  <arg name="hmi_integration" default="false" />

  <arg name="spawn_manipulator" default="false" />

  <!-- Launch gazebo -->
  <group if="$(arg start_gazebo)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
      <!-- If you saved world into existing gazebo worls it's possible to use it by changing world name and location of saved file-->
      <arg name="world_name" value="$(find mmuav_gazebo)/worlds/wide_maze.world"/>
    </include>
  </group>

  <group if="$(arg spawn_manipulator)">

    <!-- This name determines controllers of an arm-->    
    <arg name="manipulator_name" default="uav"/>
    <arg name="model_type" default="uav_wp_manipulator" />
    <arg name="model" value="$(find mmuav_description)/urdf/$(arg model_type).gazebo.xacro" />  

    <include file="$(find mmuav_description)/launch/spawn_uav_wp_manipulator.launch">
      <arg name="model_type" value="$(arg model_type)" />
      <arg name="model" value="$(arg model)" />
      <arg name="name" value="$(arg name)" />
      <arg name="x" value="$(arg x)" />
      <arg name="y" value="$(arg y)" />
      <arg name="z" value="$(arg z)" />
      <arg name="turn_off_all_collisions" default="$(arg turn_off_all_collisions)" />
      <arg name="collision_bitmask" default="$(arg collision_bitmask)" />
      <arg name="mount_stereo_cam" value="false" />  
    </include>

    <include file="$(find aerial_manipulators_control)/launch/wp_manipulator_gazebo_control.launch">
      <arg name="namespace" value="$(arg manipulator_name)" />
    </include >


  </group>

  <group unless="$(arg spawn_manipulator)">

    <arg name="model_type" default="uav" />
    <arg name="model" value="$(find mmuav_description)/urdf/$(arg model_type).gazebo.xacro" />  
    
    <include file="$(find mmuav_description)/launch/spawn_uav.launch">
      <arg name="model_type" value="$(arg model_type)" />
      <arg name="model" value="$(arg model)" />
      <arg name="name" value="$(arg name)" />
      <arg name="x" value="$(arg x)" />
      <arg name="y" value="$(arg y)" />
      <arg name="z" value="$(arg z)" />
      <arg name="turn_off_all_collisions" default="$(arg turn_off_all_collisions)" />
      <arg name="collision_bitmask" default="$(arg collision_bitmask)" />
      <arg name="mount_stereo_cam" value="false" />  
    </include>

  </group>

  <!-- Start attitude height control -->
  <arg name="manipulator_type" default="none"/> <!-- Setting this as none to mitigate error -->
  <include file="$(find mmuav_control)/launch/rotors_variation_attitude_position_control.launch">
    <arg name="namespace" value="$(arg name)" />
    <arg name="x" value="$(arg x)" />
    <arg name="y" value="$(arg y)" />
    <arg name="z" value="$(arg z)" />
    <arg name="run_trajectory_node" value="$(eval 'none' == manipulator_type)" />
  </include>

  <group if="$(arg hmi_integration)"> 
    <!-- play sound command for UAV operator -->
    <node name="sound_play" pkg="sound_play" type="soundplay_node.py"/>

    <!-- generate sound comparing current and wanted UAV pose -->
    <node name="generate_ref_sound" pkg="simulation_sound_play" type="generate_ref_sound.py" output="screen" />
  </group>

  

</launch>
