<?xml version="1.0"?>

<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="enable_logging" default="true"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="uav"/>

  <arg name="model_type" default="uav" />

  <arg name="name" default="uav" />
  <arg name="x" default="0.0" />
  <arg name="y" default="0.0" />
  <arg name="z" default="0.0" />
  
  <arg name="manipulator_type" default="none" />
  <!-- manipulator_tool = (rod, rod_with_camera, camera, rod_with_kinect) -->
  <arg name="manipulator_tool" default="none" />
  <arg name="start_gazebo" default="true" />
  <arg name="mount_magnet" default="false" />
  <arg name="mount_magnet_with_disk" default="false" />
  <arg name="magnet_dipole_moment_z" default="1" />
  <arg name="turn_off_all_collisions" default="false" />
  <arg name="collision_bitmask" default="-1" />
  <!-- Odometry type can be ground_truth which has no noise
    or realistic which has generic noise parameters. -->
  <arg name="odometry_type" default="ground_truth" />
  <!-- Use UavPositionControlRealistic.yaml if you use realistic
    odometry type. -->
  <arg name="position_control_params_file" default="UavPositionControl.yaml" />


  <!-- Launch gazebo -->
  <group if="$(arg start_gazebo)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
    </include>
  </group>

  <include file="$(find mmuav_description)/launch/spawn_uav.launch">
    <arg name="model_type" value="$(arg model_type)" />
    <arg name="name" value="$(arg name)" />
    <arg name="x" value="$(arg x)" />
    <arg name="y" value="$(arg y)" />
    <arg name="z" value="$(arg z)" />
    <arg name="manipulator_type" value="$(arg manipulator_type)" />
    <arg name="manipulator_tool" value="$(arg manipulator_tool)" />
    <arg name="mount_magnet" value="$(arg mount_magnet)" />
    <arg name="mount_magnet_with_disk" value="$(arg mount_magnet_with_disk)" />
    <arg name="magnet_dipole_moment_z" value="$(arg magnet_dipole_moment_z)" />
    <arg name="turn_off_all_collisions" value="$(arg turn_off_all_collisions)" />
    <arg name="collision_bitmask" value="$(arg collision_bitmask)" />
    <arg name="odometry_type" value="$(arg odometry_type)" />
  </include>

  <!-- Start attitude height control -->
  <include file="$(find mmuav_control)/launch/rotors_variation_attitude_position_control.launch">
    <arg name="namespace" value="$(arg name)" />
    <arg name="x" value="$(arg x)" />
    <arg name="y" value="$(arg y)" />
    <arg name="z" value="$(arg z)" />
    <arg name="run_trajectory_node" value="$(eval 'none' == manipulator_type)" />
    <arg name="control_parameters_file" value="$(arg position_control_params_file)" />
  </include>

  <group if="$(eval 'wp_manipulator' == manipulator_type)">
    <include file="$(find aerial_manipulators_control)/launch/wp_manipulator_gazebo_control.launch">
      <arg name="namespace" value="$(arg name)" />
      <arg name="velocity_control_file" default="$(find mmuav_control)/config/wp_manipulator_velocity_control.yaml"/>
    </include>

    <node name="joint_trajectory_to_uav_and_manipulator" pkg="mmuav_control" type="joint_trajectory_to_uav_and_wp_manipulator_reference.py" ns="$(arg name)" output="screen"/>
  </group>

  <group if="$(eval 'wp_manipulator_3rx' == manipulator_type)">
    <include file="$(find aerial_manipulators_control)/launch/wp_manipulator_3rx_gazebo_control.launch">
        <arg name="namespace" value="$(arg name)" />
        <arg name="velocity_control_file" default="$(find mmuav_control)/config/wp_manipulator_3rx_velocity_control.yaml"/>
    </include>

    <node name="joint_trajectory_to_uav_and_manipulator" pkg="mmuav_control" type="joint_trajectory_to_uav_and_wp_manipulator_3rx_reference.py" ns="$(arg name)"/>
  </group>

</launch>
